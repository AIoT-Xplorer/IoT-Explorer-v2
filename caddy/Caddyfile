{
    email {$ACME_EMAIL}
}

# Bloc reutilizabil cu reguli de securitate
(common_hardening) {
    # ascunde fiÈ™iere/directoare sensibile (dotfiles)
    @forbidden path /.git* /.svn* /.hg* /.env* /.DS_Store /*.bak /*.swp
    respond @forbidden 404

    # headere de securitate + eliminÄƒ "Server"
    header {
        -Server
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        Referrer-Policy "strict-origin-when-cross-origin"
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    }
}

# Frontend
{$DOMAIN} {
    import common_hardening
    encode zstd gzip
    reverse_proxy frontend:80
    # ğŸ”¹ reguli de cache
    @static {
        path *.ico *.css *.js *.gif *.jpg *.jpeg *.png *.svg *.woff *.woff2 *.ttf
    }
    header @static Cache-Control "public, max-age=31536000, immutable"

    @html {
        path *.html
    }
    header @html Cache-Control "no-cache, no-store, must-revalidate"
}


# API (poÈ›i activa CORS minimal dacÄƒ ai nevoie â€“ vezi comentariul)
{$API_DOMAIN} {
    import common_hardening
    encode zstd gzip

    # --- CORS minimal (decomenteazÄƒ dacÄƒ este necesar) ---
    @preflight method OPTIONS
    handle @preflight {
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Authorization, Content-Type"
        header Access-Control-Max-Age "86400"
        respond "" 204
    }
    header Access-Control-Allow-Origin "*"
    # -----------------------------------------------------

    reverse_proxy backend:80
}

# MQTT peste WebSocket (WS -> WSS prin Caddy)
{$MQTT_DOMAIN} {
    import common_hardening
    # compresia nu ajutÄƒ WS, o lÄƒsÄƒm deoparte aici
    reverse_proxy mosquitto:9001
}
