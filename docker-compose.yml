version: "3.9"
name: app_stack

services:
  caddy:
    image: caddy:2.8-alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"
    environment:
      - DOMAIN=${DOMAIN}
      - API_DOMAIN=${API_DOMAIN}
      - MQTT_DOMAIN=${MQTT_DOMAIN}
      - ACME_EMAIL=${ACME_EMAIL}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on: [frontend, backend, mosquitto]
    networks: [app_net]

  frontend:
    image: nginx:alpine
    restart: unless-stopped
    expose:
      - "80"
    # command: ["/bin/sh","-c","mkdir -p /usr/share/nginx/html && echo '<h2>Frontend OK</h2>' > /usr/share/nginx/html/index.html && nginx -g 'daemon off;'"]
    volumes:
    - ./frontend:/usr/share/nginx/html:ro
    networks: [app_net]

  backend:
    # image: ealen/echo-server:latest
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # - PORT=80
      # - DB_HOST=db
      # - DB_PORT=5432
      # - DB_NAME=${POSTGRES_DB:-iot}
      # - DB_USER=${POSTGRES_USER:-iot}
      # - DB_PASSWORD=${POSTGRES_PASSWORD:?set in .env}
      # - MQTT_BROKER=mosquitto
      # - MQTT_PORT=1883
      # - MQTT_USERNAME=${MQTT_USERNAME:-}
      # - MQTT_PASSWORD=${MQTT_PASSWORD:-}
       - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    expose:
      - "80"
    networks: [app_net]

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:               # ðŸ‘ˆ aici expunem doar 1883 direct
      - "5.75.210.124:1883:1883"
    expose:
      - "9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks: [app_net]
  db:
    image: timescale/timescaledb:latest-pg14 
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iot}
      POSTGRES_USER: ${POSTGRES_USER:-iot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?set in .env}
    # ports:
      # opÈ›ional, doar pentru acces direct din afara hostului pentru debug:
      # - "127.0.0.1:5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d:ro   # <-- aici pui 01_schema.sql
    networks: [app_net]
  
  ingestor:
    build: ./backend/ingestors
    restart: unless-stopped
    environment:
      # MQTT â€“ momentan anonim, deci fÄƒrÄƒ user/pass
      MQTT_HOST: mosquitto
      MQTT_PORT: 1883
      TOPIC_FILTER: "$share/ingestors/tenants/+/+/+/+"
      # DB
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on: [mosquitto, db]

networks:
  app_net:
    driver: bridge

volumes:
  caddy_data: {}
  caddy_config: {}
  db_data: {}
